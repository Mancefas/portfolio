[
  {
    "id": 1,
    "title": "Sourcery academy project",
    "img": "/img/sourceryThumb.png",
    "imgBigger": "/img/sourcery1.png",
    "anotherBiggerImg": "/img/sourcery2.png",
    "shortDescription": "A group project for sourcery academy",
    "stack": ["React", "Typescript", "SCSS" ],
    "longerTitle": "A group project for sourcery academy",
    "fullDescription": "Crafted by a team of six, this project came to life over a span of around three months, during which the team actively embraced and learned the latest technologies. The project was initiated from a Figma design and implemented using React, with component previews seamlessly presented via Storybook.",
    "linkToWebsite": "https://lost-and-found-project.netlify.app/",
    "linkToCode": ""
  },
  {
    "id": 2,
    "title": "itforces.lt",
    "img": "/img/itForcesTumb.png",
    "imgBigger": "/img/itForces.png",
    "anotherBiggerImg": "/img/itForces2.png",
    "shortDescription": "A group open-source project",
    "stack": ["React", "Typescript", "SCSS" ],
    "longerTitle": "",
    "fullDescription": "Helped to code and start this project. IT Forces blend work and learning to empower emerging IT talents. Turninng ideas into reality, whether it's websites, systems, or more.",
    "linkToWebsite": "https://itforces.lt/",
    "linkToCode": ""
  },
  {
    "id": 3,
    "title": "Y-something",
    "img": "",
    "imgBigger": "/img/y-something1.png",
    "anotherBiggerImg": "/img/y-something2.png",
    "shortDescription": "Website for reglaments and copying them",
    "stack": ["React", "Typescript", "Storybook", "SCSS", "Firebase"],
    "longerTitle": "Admin style web-app",
    "fullDescription": "Addressing text redundancy, this web application serves as a convenient tool for storing frequently used content. It enables users to save lengthy text segments to their clipboard with ease. Simply click a button to copy the associated text, ready for use wherever needed. The project also features a comprehensive component library in its accompanying storybook.",
    "linkToWebsite": "https://sample-y.netlify.app/",
    "linkToCode": "https://github.com/Mancefas/Y-something/tree/eng-version"
  },
  {
    "id": 4,
    "title": "race-results",
    "img": "/img/RaceResults.png",
    "imgBigger": "/img/raceResults1.png",
    "anotherBiggerImg": "/img/raceResults2.png",
    "shortDescription": "Website for race results and finishing places.",
    "stack": ["React", "Material UI", "Font awesome", "Firebase"],
    "longerTitle": "Website was built to show race results and finishing places in real-time",
    "fullDescription": "The project incorporates a separate admin app for tasks such as recording finishing times, adding new racers, and performing data corrections. The website seamlessly integrates Firebase's real-time database and authentication features.",
    "linkToWebsite": "https://race-time.netlify.app/",
    "linkToCode": ""
  },
  {
    "id": 5,
    "title": "minant.lt",
    "img": "/img/minant.lt.png",
    "imgBigger": "/img/minant-blog.jpg",
    "shortDescription": "Next.js website for blogging.",
    "stack": ["Next.js", "Material UI", "Font awesome"],
    "longerTitle": "Website to display blog posts about cycling. ",
    "fullDescription": "Developed using Next.js, this website serves as a blog platform, leveraging Markdown for creating new posts. The content is presented in the Lithuanian language.",
    "linkToWebsite": "https://minant-lt.netlify.app",
    "linkToCode": "https://github.com/Mancefas/minant.lt-next.js-blog"
  },
  {
    "id": 6,
    "title": "nordcarrier.lt",
    "img": "/img/ncNext.png",
    "imgBigger": "/img/ncNext1.png",
    "anotherBiggerImg": "/img/ncNext2.png",
    "shortDescription": "",
    "stack": ["Next.js", "Mantine UI"],
    "longerTitle": "Nordcarrier - forwarding company website",
    "fullDescription": "Website for forwarding company with Next.js to be faster. There is ENG and LTU languages, all the text is in different file for easier maintenance. It has light and dark theme as well. ",
    "linkToWebsite": "https://www.nordcarrier.lt/"
  },
  {
    "id": 7,
    "title": "baltic-covid-news",
    "img": "/img/balticNews.png",
    "imgBigger": "/img/balticCovidNews.png",
    "shortDescription": "Dynamic web app that shows statistics about Covid for Baltic states (Europe).",
    "stack": ["React", "Material UI", "Font awesome"],
    "longerTitle": "Website to display Covid numbers about Baltic states ( Lithuania, Latvia, Estonia)",
    "fullDescription": "For the data I have used 2 APIs.The table on the top shows world data for that day, lower tables show vaccination data and daily data.There is a table where you can select a different country to show data for. Auto suggestions to show country name when starting to type.",
    "linkToWebsite": "https://baltic-covid-news.netlify.app/",
    "linkToCode": "https://github.com/Mancefas/covid-news"
  },
  {
    "id": 8,
    "title": "website-using-api",
    "img": "",
    "imgBigger": "/img/qualTask.png",
    "shortDescription": "Just a simple website for using mock/sample API data.Form with validation and a hint with what's needed.",
    "stack": ["React", "React-router", "Material UI"],
    "longerTitle": "Qualification task",
    "fullDescription": "Task 1 - displaying data from API using Data Grid with pagination to show only 11 elements on load.Task 2 - when pressed on 1 of the initially loaded elements you get to a second page with more details about pressed element.Task 3 - a button on top of the page called PRESS ME FOR NEW POST. When pressed you get to a new page (/form-page) where you get a new form for the post. This form has validation and it should have all 3 fields some text before you can press POST IT button. After pressing post it data from text fields are sent to API.",
    "linkToWebsite": "https://antra-ver.netlify.app/",
    "linkToCode": "https://github.com/Mancefas/qualification-task"
  },
  {
    "id": 9,
    "title": "coffee-place-website",
    "img": "/img/coffeeLogo.png",
    "imgBigger": "/img/coffeePlace.png",
    "shortDescription": "E-commerce website made using react-hooks.",
    "stack": ["React", "Material UI"],
    "longerTitle": "E-commerce website for coffee shop using react.",
    "fullDescription": "On pressed navbar links - merchandise is sorted on-page. The dynamic cart shows items added, price and how many items are placed. All is done by using react hooks. There is no back-end",
    "linkToWebsite": "https://coffee-place-e-comm.netlify.app/",
    "linkToCode": "https://github.com/Mancefas/react-e-commerce"
  }
]
